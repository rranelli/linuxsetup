#!/bin/bash
gitmulticast-telnyx() {
  GITHUB_USER_TYPE=orgs GITHUB_USER=team-telnyx CODE_DIR="$HOME/telnyx" gitmulticast "$@"
}
alias 8gmt='gitmulticast-telnyx'

grn-echo() { echo -e "\e[0;32m${@}\e[0m"; }
red-echo() { echo -e "\e[0;31m${@}\e[0m"; }

__make_me_sudo() { sudo echo -n ;}
__get-vpn-pid() { pgrep vpnc ;}

8vpn-connect() {
  __make_me_sudo

  (
    mimipass get telnyx.okta.com/password \
      | silently sudo vpnc
  ) && grn-echo "Connected!" || red-echo "Error!"
}

8vpn-disconnect() {
  __make_me_sudo

  local pid=$(__get-vpn-pid)
  if [ -n "${pid}" ]; then
    sudo kill "${pid}"
    sleep 0.2
    grn-echo "Disconnected from ${pid}"
  else
    grn-echo "Not connected"
  fi
}

8vpn-ps1() {
  local ret=$?
  local pid=$(__get-vpn-pid)
  [ -n "${pid}" ] && echo "(vpn)"

  return $ret
}

8tv-meld-latest() {
  local REPO_ROOT=$(git rev-parse --show-toplevel)
  local LATEST_OUTPUT=$(ls -1 output/ | tail -n1)
  meld "${REPO_ROOT}/output/${LATEST_OUTPUT}"/dialplan-{master,red}

  echo ${LATEST_OUTPUT}
}

8tv-clean-snapshots() {
  local REPO_ROOT=$(git rev-parse --show-toplevel)
  ls -1 snapshots/ \
    | egrep '(prod_|dev_)' \
    | sort -r \
    | tail -n +2 \
    | xargs -n1 -I{} rm -rf snapshots/{}
}

8tv-update-snapshot() {
  local REPO_ROOT=$(git rev-parse --show-toplevel)
  local LATEST_SNAPSHOT=$(ls -1 snapshots | tail -n1)
  sed -i -e "s/SNAPSHOT=\\/snapshots\\/.*$/SNAPSHOT=\\/snapshots\\/${LATEST_SNAPSHOT}/g" mockserver.env
}

8tv-clean() {
  (
    cd $(git rev-parse --show-toplevel) && \
      8retry bin/snapshotter prod && 8tv-clean-snapshots && 8tv-update-snapshot && docker-compose pull --ignore-pull-failures
  )
}

8tv-clean-verify() {
  (
    cd $(git rev-parse --show-toplevel) && \
      8tv-clean && \
      bin/up.sh dialplan && \
      sleep 220 && \
      8tv-verify
  )
}

8tv-verify() {
  (
    cd $(git rev-parse --show-toplevel) && \
      for q in queries/*; do
        bin/verifier -n8 dialplan --process all "$q" && 8tv-meld-latest
      done
  )
}

8te-fscli() {
  (
    set -euo pipefail

    local TANKER=${1:-ld6-tanker02}
    local ENV=${2:-dev}
    local LOGFILE=${3:-b2bualog-$TANKER.log}

    local container_ip="$(ssh -t ${TANKER} sudo docker inspect b2bua-${ENV} 2>/dev/null | jq .[].NetworkSettings.Networks[].IPAddress)"
    ssh -t ${TANKER} sudo docker exec -ti "b2bua-${ENV}" fs_cli -H "${container_ip}" -p "$(mimipass get telnyx/fscli)" |& tee "${LOGFILE}"
  )
}

8te-check-container-version() {
  (
    local checks
    declare -A checks=()

    for tanker in ${TANKERS[@]}; do
      for container in "$@"; do
        ssh "$tanker" "sudo docker inspect ${container}" 2>/dev/null | jq -r "\"\(.[].Config.Labels.GIT_COMMIT) - ${container}@${tanker}\"" 2>/dev/null &
        checks[$tanker]=$!
      done
    done | sort

    for pid in ${checks[@]}; do
      wait "${pid}"
    done
  )
}

8te-check-container-ip() {
  (
    local checks
    declare -A checks=()

    for tanker in ${TANKERS[@]}; do
      for container in "$@"; do
        ssh "$tanker" "sudo docker inspect ${container}" 2>/dev/null | jq -r "\"\(.[].NetworkSettings.Networks[].IPAddress): ${tanker}\"" &
        checks[$tanker]=$!
      done
    done | sort

    for pid in ${checks[@]}; do
      wait "${pid}"
    done
  )
}

8te-remote-iex() {
  (
    set -euo pipefail

    local HOST=$1
    local CONTAINER=${2:-dialplan-dev}
    local ERLANG_COOKIE=${3:-dialplan-dev-cookie}

    ssh -t "${HOST}" sudo docker exec -it "${CONTAINER}" iex --name "mimi@127.0.0.1" --cookie "${ERLANG_COOKIE}" --remsh "app@127.0.0.1"
  )
}

8te-remote-iex-tunnel() {
  (
    set -euo pipefail

    local HOST=$1
    local ERLANG_COOKIE=${2:-dialplan-dev-cookie}

    ssh -NT -o ServerAliveInterval=60 -L4369:localhost:36060 $HOST &
    local tunnel_pid=$!
    trap "kill ${tunnel_pid}" EXIT RETURN

    sleep 20

    iex --name "mimi@127.0.0.1" --cookie "${ERLANG_COOKIE}" --remsh "app@127.0.0.1"
  )
}

declare -a TANKERS=(
  ams3-tanker01.ipa.corp.telnyx.com
  ch1-tanker01.ipa.corp.telnyx.com
  ch1-tanker02.ipa.corp.telnyx.com
  dal9-tanker01.ipa.corp.telnyx.com
  dal9-tanker02.ipa.corp.telnyx.com
  dal9-tanker03.ipa.corp.telnyx.com
  iad-aws01-vatr01.ipa.corp.telnyx.com
  iad-aws01-vatr02.ipa.corp.telnyx.com
  iad-aws01-vatr03.ipa.corp.telnyx.com
  iad-aws01-vatr04.ipa.corp.telnyx.com
  iad-aws04-vatr05.ipa.corp.telnyx.com
  iad-aws04-vatr06.ipa.corp.telnyx.com
  ld6-tanker01.ipa.corp.telnyx.com
  ld6-tanker02.ipa.corp.telnyx.com
  ord-aws01-vatr01.ipa.corp.telnyx.com
  ord-aws01-vatr02.ipa.corp.telnyx.com
  ord-aws01-vatr03.ipa.corp.telnyx.com
  ord-aws01-vatr04.ipa.corp.telnyx.com
  ord-aws04-vatr05.ipa.corp.telnyx.com
  ord-aws04-vatr06.ipa.corp.telnyx.com
  sjc-aws01-vatr01.ipa.corp.telnyx.com
  sjc-aws01-vatr02.ipa.corp.telnyx.com
  sjc-aws01-vatr03.ipa.corp.telnyx.com
  sjc-aws01-vatr04.ipa.corp.telnyx.com
  sjc-aws04-vatr05.ipa.corp.telnyx.com
  sjc-aws04-vatr06.ipa.corp.telnyx.com
  sjc3-tanker01.ipa.corp.telnyx.com
  sjc3-tanker02.ipa.corp.telnyx.com
  sjc3-tanker03.ipa.corp.telnyx.com
  sng1-tanker01.ipa.corp.telnyx.com
  tor1-tanker01.ipa.corp.telnyx.com
  van2-tanker01.ipa.corp.telnyx.com
  van2-tanker02.ipa.corp.telnyx.com
  wdc4-sdtanker01.ipa.corp.telnyx.com
  wdc4-tanker01.ipa.corp.telnyx.com
  wdc4-tanker02.ipa.corp.telnyx.com
  wdc4-tanker03.ipa.corp.telnyx.com
)

8te-dialplan-ips() {
  cat <<EOF
   PROD IPS (for dev, +1)

   tor1-tanker01.ipa.corp.telnyx.com: 10.15.10.104,
   ch1-tanker01.ipa.corp.telnyx.com: 10.15.11.104,
   ch1-tanker02.ipa.corp.telnyx.com: 10.15.12.104,
   wdc4-sdtanker01.ipa.corp.telnyx.com: 10.15.16.104,
   dal9-tanker03.ipa.corp.telnyx.com: 10.15.17.104,
   wdc4-tanker03.ipa.corp.telnyx.com: 10.15.18.104,
   sjc3-tanker03.ipa.corp.telnyx.com: 10.15.20.104,
   dal9-tanker01.ipa.corp.telnyx.com: 10.15.2.104,
   dal9-tanker02.ipa.corp.telnyx.com: 10.15.3.104,
   wdc4-tanker01.ipa.corp.telnyx.com: 10.15.4.104,
   wdc4-tanker02.ipa.corp.telnyx.com: 10.15.5.104,
   sjc3-tanker01.ipa.corp.telnyx.com: 10.15.6.104,
   sjc-aws01-vatr01.ipa.corp.telnyx.com: 10.15.64.104,
   sjc-aws01-vatr02.ipa.corp.telnyx.com: 10.15.65.104,
   sjc3-tanker02.ipa.corp.telnyx.com: 10.15.7.104,
   ord-aws01-vatr01.ipa.corp.telnyx.com: 10.15.78.104,
   ord-aws01-vatr02.ipa.corp.telnyx.com: 10.15.79.104,
   van2-tanker01.ipa.corp.telnyx.com: 10.15.8.104,
   iad-aws01-vatr01.ipa.corp.telnyx.com: 10.15.81.104,
   iad-aws01-vatr02.ipa.corp.telnyx.com: 10.15.82.104,
   ord-aws01-vatr03.ipa.corp.telnyx.com: 10.15.83.104,
   ord-aws01-vatr04.ipa.corp.telnyx.com: 10.15.84.104,
   sjc-aws01-vatr03.ipa.corp.telnyx.com: 10.15.85.104,
   sjc-aws01-vatr04.ipa.corp.telnyx.com: 10.15.86.104,
   iad-aws01-vatr03.ipa.corp.telnyx.com: 10.15.87.104,
   iad-aws01-vatr04.ipa.corp.telnyx.com: 10.15.88.104,
   iad-aws04-vatr05.ipa.corp.telnyx.com: 10.15.89.104,
   iad-aws04-vatr06.ipa.corp.telnyx.com: 10.15.90.104,
   van2-tanker02.ipa.corp.telnyx.com: 10.15.9.104,
   ord-aws04-vatr05.ipa.corp.telnyx.com: 10.15.91.104,
   ord-aws04-vatr06.ipa.corp.telnyx.com: 10.15.92.104,
   sjc-aws04-vatr05.ipa.corp.telnyx.com: 10.15.93.104,
   sjc-aws04-vatr06.ipa.corp.telnyx.com: 10.15.94.104,
   ams3-tanker01.ipa.corp.telnyx.com: 10.31.0.104,
   ld6-tanker02.ipa.corp.telnyx.com: 10.31.1.104,
   ld6-tanker01.ipa.corp.telnyx.com: 10.31.2.104,
   sng1-tanker01.ipa.corp.telnyx.com: 10.47.0.104
EOF
}

PS1="\$(8vpn-ps1)$PS1"
