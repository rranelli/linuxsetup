- name: "(inputrc) ignore casing for bash completion"
  copy:
    src=etc/inputrc
    dest=/etc/inputrc

- name: "hh"
  include_tasks: 'hh.yml'

- name: "link dotfiles"
  become: false
  command: "{{ code_dir }}/linuxsetup/desktop/scripts/setup_dotfiles"
  changed_when: false

- name: "configure git"
  become: false
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  with_items:
    - { name: "user.name", value: "Milhouse" }
    - { name: "user.email", value: "renanranelli@gmail.com" }
    - { name: "user.signingKey", value: "BDD12B22" }
    - { name: "push.default", value: "simple" }
    - { name: "commit.template", value: "/home/{{ local_user }}/.gitcommittemplate" }
    - { name: "commit.gpgsign", value: "true" }
    - { name: "github.user", value: "rranelli" }
    - { name: "github.token", value: "{{ github_oauth_token }}" }
    - { name: "github.oauth-token", value: "{{ github_oauth_token }}" }
    - { name: "core.excludesfile", value: "/home/{{ local_user }}/.gitignore_global"}


- name: "install python3 & python3-pip"
  apt:
    name="{{ item }}"
    state="present"
    update_cache="yes"
    cache_valid_time="7200"
    state=latest
  with_items:
    - python3
    - python3-pip

- name: "install wakatime"
  pip:
    name=wakatime
    state=latest

- name: "wakatime config"
  become: false
  copy:
    src=".wakatime.cfg"
    dest="~/.wakatime.cfg"

- name: "copy .authinfo.gpg file for magithub"
  become: false
  copy:
    src=".authinfo.gpg"
    dest="~/.authinfo.gpg"

- name: "download all of your github code"
  become: false
  shell: |
    env CODE_DIR={{ code_dir }} \
        {{ code_dir }}/linuxsetup/desktop/scripts/gitmulticast.sh clone && \
          touch "{{ code_dir }}/.fetched"
  args:
    chdir: "{{ code_dir }}"
    creates: "{{ code_dir }}/.fetched"

- name: "creates a cron job to automatically fetch from all repos"
  cron:
    minute: "0"
    hour: "*/4"
    name: "{{ item.name }}"
    job: "env CODE_DIR={{ item.dir }} {{ code_dir }}/linuxsetup/desktop/scripts/gitmulticast.sh fetch > /home/{{ local_user }}/.local/log.{{ item.name }} 2>&1"
    user: "{{ local_user }}"
  with_items:
    - {name: "code", dir: "{{ code_dir }}"}
    - {name: "telnyx", dir: "/home/{{ local_user }}/telnyx"}
    - {name: "taming-chaos", dir: "/home/{{ local_user }}/taming-chaos"}

- file: path="~/.fonts" state="directory"
  become: false

- name: "install source-code-pro fira{\\,,code\\,,mono}"
  become: false
  shell: |
    mkdir -p temp-fonts && cd temp-fonts

    wget https://github.com/tonsky/FiraCode/releases/download/1.101/FiraCode_1.101.zip
    wget https://www.fontsquirrel.com/fonts/download/fira-mono
    wget https://github.com/adobe-fonts/source-code-pro/archive/1.017R.zip

    for f in fira* Fira* 1.017R.zip; do unzip $f; done
    cp *.otf FiraCode*/*.otf source-code-pro-1.017R/OTF/*.otf ~/.fonts
    fc-cache -f -v

    cd .. && rm -rf temp-fonts
  args:
    creates: "~/.fonts/FiraMono-Bold.otf"
